cor(c1_data,method = "spearman")
cr_mat=cor(c1_data,method = "spearman")
cr_mat[1,]
abs(cr_mat[1,])<
0.05
abs(cr_mat[1,])
abs(cr_mat[1,])<0.05
cr_mat[abs(cr_mat[1,])<0.05]
cr_mat
is.na(cr_mat)
cr_mat[is.na(cr_mat)]
cr_mat[is.na(cr_mat),]
is.na(cr_mat)
cr_mat[is.na(cr_mat)]<-0
cr_mat
cr_mat[1,]
summary(cr_mat[1,])
cr_mat[abs(cr_mat[1,])<0.05]
cabs(cr_mat[1,])>0.05
abs(cr_mat[1,])>0.05
abs(cr_mat[1,])>0.05
abs(cr_mat[1,])>0.05 == TRUE
which(abs(cr_mat[1,])>0.05)
?which
which(abs(cr_mat[1,])>0.05)
which(abs(cr_mat[1,])>0.05,arr.ind=TRUE)
which(abs(cr_mat[1,])>0)
which(abs(cr_mat[1,])>1)
which(abs(cr_mat[1,])>0)
which(abs(cr_mat[1,])>0.05)
which(cr_mat > 0.05, arr.ind = T)
which(cr_mat[1,] > 0.05, arr.ind = T)
cr_mat[1,515]
cr_mat[1,526]
cols=which(abs(cr_mat[1,]) > 0.05, arr.ind = T)
cols
rownames(cols)
colnames(cols)
cols
cols[1]
cols[2]
cols[1]
class(cols)
as.data.frame(cols)
x=as.data.frame(cols)
x
rownames(x)
rownames(as.data.frame(cols))
cols=which(abs(cr_mat[1,]) > 0.05 & !=1 , arr.ind = T)
#Reading the dataset
data=read.csv("data_combined.csv")
rownames(data)<-data$PatientID
data$PatientID<-NULL
c1_data=subset(data,x==1)
c2_data=subset(data,x==2)
c1_data$x<-NULL
c2_data$x<-NULL
library(mboost)
cr_mat=cor(c1_data,method = "spearman")
cr_mat[is.na(cr_mat)]<-0
cols=which(abs(cr_mat[1,]) > 0.05, arr.ind = T)
cols
rownames(as.data.frame(cols))
cr_mat
rownames(cr_mat)
cr_mat[1,]
colnames(c1_data)
dim(cr_mat)
rownames(cr_mat)[1]
rownames(cr_mat)[2]
rownames(cr_mat)[3]
for (i in 1:539){
x_nam=rownames(cr_mat)[i]
y_nam=rownames(as.data.frame(which(abs(cr_mat[i,]) > 0.05, arr.ind = T)))
print(x_nam)
print(y_nam)
}
c1_data
x_nam
y_nam
i=1
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
y_nam=rownames(as.data.frame(which(abs(cr_mat[i,]) > 0.05, arr.ind = T)))
print(x_nam) #Row name
print(y_nam) #Column names with correlation >0.05
c1_data[[x_nam]]
c1_data
c1_data[i]
length(c1_data[i])
dim(c1_data[i])
dim(c1_data[[i]])
length(c1_data[[i]])
y_nam
paste(y_nam)
paste(y_nam,sep="+")
type(y_nam)
class(y_nam)
paste(y_nam,collapse = "")
paste(y_nam,collapse = " ")
paste(y_nam,collapse = "+")
?glm
glm(x_nam ~ paste(y_nam,collapse = "+"),data=c1_data)
c1_Data
c1_sata
c1_data
glm(x_nam ~ paste(y_nam,collapse = "+"),data=c1_data)
x_nam
glm( "Actinobacillus" ~ "Actinobacillus",data=c1_data)
glm( "Actinobacillus" ~ "Actinobacillus"+"Phoma",data=c1_data)
glm( "Actinobacillus" ~ Phoma",data=c1_data)
)
""
glm( "Actinobacillus" ~ "Phoma",data=c1_data)
glm(Actinobacillus ~ Phoma,data=c1_data)
glm("Actinobacillus" ~ "Phoma",data=c1_data)
noquote(x_nam)
glm(noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+")),data=c1_data)
noquote(paste(y_nam,collapse = "+"))
noquote(paste(y_nam,collapse = "+"))[1]
noquote(paste(y_nam,collapse = "+"))[1]
noquote(paste(y_nam,collapse = "+"))[[1]]
noquote(paste(y_nam,collapse = "+"))
noquote(paste(y_nam,collapse = "+"))
glm(x_nam ~ paste(y_nam,collapse = "+"),data=c1_data)
model1<-glm(x_nam ~ paste(y_nam,collapse = "+"),data=c1_data)
model1
model1<-glmboost(x_nam ~ paste(y_nam,collapse = "+"),data=c1_data)
model1
summary(model1)
c1_data
var != 0
c1_data != 0
colSums(c1_data != 0)
colSums(c1_data != 0)>0
c1_data[,colSums(c1_data != 0)>0]
c1_data=c1_data[,colSums(c1_data != 0)>0]
c1_data=subset(data,x==1)
c1_data[,colSums(c1_data != 0)>0] #removed columns with zero values
c1_data[,colSums(c1_data != 0)>0] #removed columns with zero values
c1_data=c1_data[,colSums(c1_data != 0)>0] #removed columns with zero values
#Reading the dataset
data=read.csv("data_combined.csv")
rownames(data)<-data$PatientID
data$PatientID<-NULL
c1_data=subset(data,x==1)
c2_data=subset(data,x==2)
c1_data$x<-NULL
c2_data$x<-NULL
#removed columns with zero values
c1_data=c1_data[,colSums(c1_data != 0)>0]
c2_data=c2_data[,colSums(c2_data != 0)>0]
library(mboost)
# For c1_data
cr_mat=cor(c1_data,method = "spearman") #Compute Spearman Correlation
cr_mat[is.na(cr_mat)]<-0  # Assign 0 to NA values(NA due to zero STD)
i=1
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
y_nam=rownames(as.data.frame(which(abs(cr_mat[i,]) > 0.05, arr.ind = T)))
print(x_nam) #Row name
print(y_nam) #Column names with correlation >0.05
glm(noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+")),data=c1_data)
glm(noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+")),data=c1_data)
#removed columns with zero values
c1_data=c1_data[,colSums(c1_data != 0)>0]
glm(noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+")),data=c1_data)
summary(c1_data)
glm(noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+")),data=c1_data)
c1_data
as.numeric(c1_data)
View(c1_data)
#Reading the dataset
data=read.csv("data_combined.csv")
rownames(data)<-data$PatientID
data$PatientID<-NULL
c1_data=subset(data,x==1)
c2_data=subset(data,x==2)
c1_data$x<-NULL
c2_data$x<-NULL
#Checking for relative abundance structure
r_s=c()
for (i in 1:229){
r_s=c(r_s,sum(data[i,]))
}
print(var(r_s))
remove(r_s,i,data)
library(mboost)
# For c1_data
cr_mat=cor(c1_data,method = "spearman") #Compute Spearman Correlation
cr_mat[is.na(cr_mat)]<-0  # Assign 0 to NA values(NA due to zero STD)
i=1
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
y_nam=rownames(as.data.frame(which(abs(cr_mat[i,]) > 0.05, arr.ind = T)))
print(x_nam) #Row name
print(y_nam) #Column names with correlation >0.05
y_nam[:2]
y_nam[,2]
y_nam[2]
y_nam[:2]
y_nam[2,]
y_nam[1:2]
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(noquotes(x_nam) ~ noquotes(paste(y_nam[1:2],collapse="+")),data=c1_data )
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(noquote(x_nam) ~ noquote(paste(y_nam[1:2],collapse="+")),data=c1_data )
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(noquote(x_nam) ~ noquote(paste(y_nam[1:2],collapse="+")),data=c1_data )
glm(noquote(x_nam) ~ noquote(paste(y_nam[1:2],collapse="+")),data=c1_data )
noquote(paste(y_nam[1:2],collapse="+"))
noquote(x_nam)
glm(Actinobacillus ~ Actinobacillus+Actinomyces,data=c1_data)
x_nam
y_nam
y_nam -x_nam
y_nam - x_nam
y_nam
y_nam[x_nam]
y_nam[1]
y_nam[2]
as.data.frame(y_nam)
cr_mat
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
cool=which(abs(cr_mat[i,]) > 0.05, arr.ind = T)
cool
?which
ind1=abs(cr_mat[i,]) > 0.05
ind1
c1_data[ind]
c1_data[ind1]
c1_data[,ind1]
ind1
c1_data[ind]
c1_data[ind1]
c1_data[ind1]<0.05
sum(c1_data[ind1]<0.05)
sum(c1_data[ind1]>0.05)
sum(c1_data[,ind1]>0.05)
sum(c1_data[,ind1]<0.05)
ind1=abs(cr_mat[i,]) > 0.05
cr_mat[1,]
cr_mat[1,][ind1]
cr_mat[1,][ind1] < 0.05
sum(cr_mat[1,][ind1] < 0.05)
sum(cr_mat[1,][ind1] > 0.05)
#Reading the dataset
data=read.csv("data_combined.csv")
rownames(data)<-data$PatientID
data$PatientID<-NULL
c1_data=subset(data,x==1)
c2_data=subset(data,x==2)
c1_data$x<-NULL
c2_data$x<-NULL
library(mboost)
# For c1_data
cr_mat=cor(c1_data,method = "spearman") #Compute Spearman Correlation
cr_mat[is.na(cr_mat)]<-0  # Assign 0 to NA values(NA due to zero STD)
i=1
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
x_nam
ind1=abs(cr_mat[i,]) > 0.05
ind1
cr_mat[i,]
x=cr_mat[i,]
x
x[,ind1]
x[ind1]
(x[ind1])<0.05
sum((x[ind1])<0.05)
(x[ind1])<0.05
?subset
#Reading the dataset
data=read.csv("data_combined.csv")
rownames(data)<-data$PatientID
data$PatientID<-NULL
c1_data=subset(data,x==1)
c2_data=subset(data,x==2)
c1_data$x<-NULL
c2_data$x<-NULL
#Checking for relative abundance structure
r_s=c()
library(mboost)
# For c1_data
cr_mat=cor(c1_data,method = "spearman") #Compute Spearman Correlation
cr_mat[is.na(cr_mat)]<-0  # Assign 0 to NA values(NA due to zero STD)
i=1
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
ind1=abs(cr_mat[i,]) > 0.05
x=cr_mat[1,]
x
x[ind]
x[ind1]
abs(x[ind1])
abs(x[ind1])<0.05
sum(abs(x[ind1])<0.05)
x
x=5
x == 4
x == 4 & 4
x == 4 & 10
x == 4 & 5
x == 5 & 5
x == 5 & 6
x == 5 & 10
x == 5 & x== 10
x == 5 & x== 7
x == 5 & x== 5
x == 5 & x== 6
i=1
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
ind1=abs(cr_mat[i,]) > 0.05 & abs(cr_mat[i,]) != 0.05
cool=which((cr_mat[i,])[ind1], arr.ind = T)
cool=which(ind1, arr.ind = T)
y_nam=rownames(as.data.frame(cool))
print(x_nam) #Row name
print(y_nam) #Column names with correlation >0.05
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
#Reading the dataset
data=read.csv("data_combined.csv")
rownames(data)<-data$PatientID
data$PatientID<-NULL
c1_data=subset(data,x==1)
c2_data=subset(data,x==2)
c1_data$x<-NULL
c2_data$x<-NULL
# For c1_data
cr_mat=cor(c1_data,method = "spearman") #Compute Spearman Correlation
cr_mat[is.na(cr_mat)]<-0  # Assign 0 to NA values(NA due to zero STD)
i=1
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
ind1=abs(cr_mat[i,]) > 0.05 & abs(cr_mat[i,]) != 0.05
x=cr_mat[ind1]
x
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
ind1=abs(cr_mat[i,]) > 0.05 & abs(cr_mat[i,]) != 1
x=cr_mat[ind1]
x
ind1
cool=which(ind1, arr.ind = T)
y_nam=rownames(as.data.frame(cool))
y_nam
x_nam
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(noquote(x_nam) ~ noquote(paste(y_nam[1:2],collapse="+")),data=c1_data )
x_nam
y_nam
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(noquote(x_nam) ~ Actinomyces+Atopobium,data=c1_data )
x_nam
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(Actinobacillus ~ Actinomyces+Atopobium,data=c1_data )
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(Actinobacillus ~ Actinomyces+Atopobium,data=c1_data )
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(Actinobacillus ~ noquote(paste(y_nam[1:2],collapse = "+")),data=c1_data )
noquote(paste(y_nam[1:2],collapse = "+"))
noquote(paste(y_nam[1:2],collapse = "+"))
#Formula
#noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
glm(Actinobacillus ~ paste(y_nam[1:2],collapse = "+"),data=c1_data )
#Formula
noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
#Formula
noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
print(x_nam) #Row name
print(y_nam) #Column names with correlation >0.05
#Formula
noquote(x_nam) ~ noquote(paste(y_nam,collapse = "+"))
x_nam
?noquote
#Formula
noquote(x_nam,right=TRUE) ~ noquote(paste(y_nam,collapse = "+"))
#Formula
x_nam~ paste(y_nam,collapse = "+")
x_nam
#Formula
x_nam ~ paste(y_nam,collapse = "+")
#Formula
paste(x_nam,paste(y_nam,collapse = "+"),sep="~")
#Formula
paste(x_nam,paste(y_nam,collapse = "+"),sep="~")
#Formula
form=paste(x_nam,paste(y_nam,collapse = "+"),sep="~")
glm(form,data=c1_data )
glmboost(form,data=c1_data )
?glmboost
glmboost(form,data=c1_data )
glmboost(noquote(form),data=c1_data )
form
class(form)
formula(form)
glmboost(formula(form),data=c1_data )
?formula
#Formula
form=formula(paste(x_nam,paste(y_nam,collapse = "+"),sep="~"))
glmboost(form,data=c1_data )
glm(form,data=c1_data )
#Formula
form=as.formula(paste(x_nam,paste(y_nam,collapse = "+"),sep="~"))
glm(form,data=c1_data )
glmboost(form,data=c1_data )
#GLMBoosting and Model Tuning
?glmboost
?mboost_fit
#GLMBoosting and Model Tuning
glmboost(form,data=c1_data,family = Gaussian(),center=TRUE,control = boost_control(),
mstop=200,nu=0.05,trace=TRUE)
#GLMBoosting and Model Tuning
glmboost(form,data=c1_data,family = Gaussian(),center=TRUE,control = boost_control(),mstop=200,nu=0.05,trace=TRUE)
#GLMBoosting and Model Tuning
glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(),mstop=200,nu=0.05,trace=TRUE)
#GLMBoosting and Model Tuning
glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=200,nu=0.05,trace=TRUE))
#GLMBoosting and Model Tuning
model1<-glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=200,nu=0.05,trace=TRUE))
coef(model1)
coef(model1,off2int = TRUE)
mean(c1_data$Actinobacillus)
?coef
coef(model1,complete=TRUE)
coef(model1)
coef(model1,which="")
coef(model1,which=" ")
coef(model1,which="")
plot(model1)
x_nam
y_nam
#GLMBoosting and Model Tuning
model1<-glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=200,nu=0.05,trace=TRUE))
coef(model1)
#GLMBoosting and Model Tuning
model1<-glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=300,nu=0.05,trace=TRUE))
plot(model1)
#GLMBoosting and Model Tuning
model1<-glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=200,nu=0.01,trace=TRUE))
plot(model1)
#GLMBoosting and Model Tuning
model1<-glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=200,nu=0.05,trace=TRUE))
plot(model1)
#GLMBoosting and Model Tuning
model1<-glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=100,nu=0.05,trace=TRUE))
plot(model1)
#GLMBoosting and Model Tuning
model1<-glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=200,nu=0.05,trace=TRUE))
plot(model1)
model1
summary(model1)
model1$`(weights)`
model1$coef()
model1$risk()
model1$control
?glmboost
signif(model1)
signif(coef(model1))
RMSE
rmse
rmse<-function(x1,x2){sqrt(mean((x1-x2)^2))}
model1$
q
print(model1)
coef(model1)
AIC(model1)
?AIC
cvrisk()
cvrisk(model1)
cvm<-cvrisk(model1)
plot(cvm)
cvm
?cvrisk
i=3
#for (i in 1:539){
x_nam=rownames(cr_mat)[i]
ind1=abs(cr_mat[i,]) > 0.05 & abs(cr_mat[i,]) != 1
cool=which(ind1, arr.ind = T)
y_nam=rownames(as.data.frame(cool))
print(x_nam) #Row name
print(y_nam) #Column names with correlation >0.05
#Formula
form=as.formula(paste(x_nam,paste(y_nam,collapse = "+"),sep="~"))
glm(form,data=c1_data )
#GLMBoosting and Model Tuning
model1<-glmboost(form,data=c1_data,family = Gaussian(),
center=TRUE,control = boost_control(mstop=200,nu=0.05,trace=TRUE))
model1
cvm<-cvrisk(model1)
cvm
plot(cvm)
